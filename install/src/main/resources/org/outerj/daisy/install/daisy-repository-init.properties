# 
# Make changes to this file and run
#             daisy-repository-init -f daisy-repository-init.properties
#
# Properties which should only interest advanced users are commented out twice.
# Properties which represent sensible defaults are commented out once
# Properties which you would want to change under normal conditions are not commented out
#
# ${propertySubstitution} is allowed. The standard java system properties also work. 
#  

# repository database configuration

# db admin user which has sufficient priveleges to create the repository
repo.dbName=daisyrepository
repo.dbUser=daisy
repo.dbPass=daisy

# Other possible values:
#  * mysql41 (You need at least 4.1.7)
#  * postgresql74 (Untested, unsupported & has known problems)
#  * oracle10g    (Untested, unsupported & has known problems)
#repo.dbType=mysql5

# For advanced database configuration parameters, see the section at the bottom.

# Configure an administrator user.
# You need this to log into Daisy, so be sure to remember them.
# It is recommended not to leave this to the default 'testuser',
# but rather create a user for yourself.
repo.adminUser=testuser
repo.adminPass=testuser


# Internal user                                  
# =============
# A user called 'internal' will be created which is used by various
# components inside the repository server to connect to the repository.
# Unless you specify a password, it will be a secure-random generated.
# This password will be written in a configuration file. It is not intended 
# to be used by humans, so it does not matter it is complex.
#repo.internalUser=internal
#repo.internalPass=internaluserpw

# Workflow user                                  
# =============
# A user called 'workflow' will be created which is used by the workflow
# when it executes timed actions or updates documents as part of workflows.
# The remarks for the 'internal' password apply for the 'workflow' password as well.
#repo.workflowUser=workflow
#repo.workflowPass=workflowuserpw

# Daisy data directory.
# =====================
# The Daisy data directory is a directory in which the repository server
# stores blob data, full text indexes, log files and configuration files.
# Note: Each of these items can be put in any location you like, it is only for
#      your convenience that they are by default grouped into one directory.

# Daisy data directory location                          
# =============================
# The Daisy data directory path you enter should be a non-existing or empty
# directory. Examples: (linux) /home/john/repodata, (windows) c:\\daisy
#
repo.datadir=${user.home}/repodata
# repo.datadir=c:\\repodata

# Custom locations for each directory. Note that
# each of these directories should be non-existent or empty
#repo.blobstore.dir=${repo.datadir}${file.separator}blobstore
#repo.indexstore.dir=${repo.datadir}${file.separator}indexstore
#repo.pubreqs.dir=${repo.datadir}${file.separator}pubreqs
#repo.logs.dir=${repo.datadir}${file.separator}logs
#repo.conf.dir=${repo.datadir}${file.separator}conf
#repo.plugins.dir=${repo.datadir}${file.separator}plugins
#repo.loadbefore.dir=${repo.plugins.dir}${file.separator}load-before-repository
#repo.loadafter.dir=${repo.plugins.dir}${file.separator}load-after-repository

# Selection of the repository namespace
# =====================================
#
#   >> WARNING: IMPORTANT DECISION AHEAD!
#
# Each Daisy repository has a namespace, documents created in that repository
# will belong to that namespace. By selecting different namespaces for
# different repositories, you will be able to export/import documents between
# them without collissions of document IDs.
#
#Some rules and recommendations:
# - A namespace name can contain the characters A-Z, a-z, 0-9 and _ (underscore)
# - Short, all-upper/lowercase namespace names look nice and read easily.
# - Don't make the namespace too long, as it will appear in each document ID and
#   in URLs and links. Preferably, make it something easy to type and remember.
# - Don't put much semantic meaning in the name. You might end up using this
#   Daisy install for more than originally intended.
# - A good name would be the name of your company (e.g. MYCORP), or its
#   initials (e.g. MC), or something made up (e.g. BLUE)
# - If you don't care, DSY (short for Daisy) is proposed as default.
# - Other names starting with DSY or equal to or starting with DAISY are
#   reserved by Daisy for future uses (case insensitive restriction).
#
repo.namespace=DSY

# Mail configuration
repo.mail.smtp.host=undefined
# (default port depends on the repo.mail.smtp.useSSL property)
#repo.mail.smtp.port=25
#repo.mail.smtp.useSSL=false
#repo.mail.smtp.useTLS=false
#repo.mail.smtp.user=false
#repo.mail.smtp.pass=false
repo.mail.from=undefined@undefined._com


# Embedded JMS service (ActiveMQ)
repo.jms.dbName=activemq
repo.jms.dbUser=activemq
repo.jms.dbPass=activemq

# see repo.dbType
#repo.jms.dbType=mysql5

# JMS user password
# (By default, a user-friendly 8-character password will be generated)
# repo.jms.adminpass=myjmspassword

##############
# Advanced database configuration parameters. Only change this if you really know what you are doing.

# mysql5 default settings
##repo.db.mysql5.url=jdbc:mysql://localhost/${repo.dbName}?characterEncoding=UTF-8
##repo.db.mysql5.driverClass=com.mysql.jdbc.Driver
##repo.db.mysql5.driverClasspath=${daisy.home}/lib/mysql/mysql-connector-java/3.1.12/mysql-connector-java-3.1.12.jar
##repo.jms.db.mysql5.url=jdbc:mysql://localhost/${repo.jms.dbName}?characterEncoding=UTF-8
##repo.jms.db.mysql5.driverClass=com.mysql.jdbc.Driver
##repo.jms.db.mysql5.driverClasspath=${daisy.home}/lib/mysql/mysql-connector-java/3.1.12/mysql-connector-java-3.1.12.jar

# mysql4.1.x - requires 4.1.7 or higher
##repo.db.mysql41.url=jdbc:mysql://localhost/${repo.dbName}?useServerPrepStmts=false&characterEncoding=UTF-8
##repo.db.mysql41.driverClass=com.mysql.jdbc.Driver
##repo.db.mysql41.driverClasspath=${daisy.home}/lib/mysql/mysql-connector-java/3.1.12/mysql-connector-java-3.1.12.jar
##repo.jms.db.mysql41.url=jdbc:mysql://localhost/${repo.jms.dbName}?useServerPrepStmts=false&characterEncoding=UTF-8
##repo.jms.db.mysql41.driverClass=com.mysql.jdbc.Driver
##repo.jsm.db.mysql41.driverClasspath=${daisy.home}/lib/mysql/mysql-connector-java/3.1.12/mysql-connector-java-3.1.12.jar

# postgresql 7.4.x (doesn't work correctly)
##repo.db.postgresql.url=jdbc:postgresql://localhost/${repo.dbName}
##repo.db.postgresql.driverClass=org.postgresql.Driver
##repo.db.postgresql.driverClasspath=${daisy.home}/lib/postgresql/postgresql/7.4-216.jdbc3/postgresql-7.4-216.jdbc3.jar
##repo.jms.db.postgresql.url=jdbc:postgresql://localhost/${repo.jms.dbName}
##repo.jms.db.postgresql.driverClass=org.postgresql.Driver
##repo.jms.db.postgresql.driverClasspath=${daisy.home}/lib/postgresql/postgresql/7.4-216.jdbc3/postgresql-7.4-216.jdbc3.jar

# oracle (10g) -- note: the jar with the Oracle drivers is not included with Daisy, you need to provide it yourself.
##repo.db.oracle.url=jdbc:oracle:thin:@localhost:1521:ora10g
##repo.db.oracle.driverClass=oracle.jdbc.driver.OracleDriver
##repo.db.oracle.driverClasspath=${daisy.home}/lib/oracle/ojdbc14/10.2.0.3.0/ojdbc14-10.2.0.3.0.jar
##repo.jms.db.oracle.url=jdbc:oracle:thin:@localhost:1521:ora10g
##repo.jms.db.oracle.driverClass=oracle.jdbc.driver.OracleDriver
##repo.jms.db.oracle.driverClasspath=${daisy.home}/lib/oracle/ojdbc14/10.2.0.3.0/ojdbc14-10.2.0.3.0.jar
