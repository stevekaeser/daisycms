<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright 2004 Outerthought bvba and Schaubroeck nv

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<beans>

  <!-- perform property substitution based on property file specified via a System property called 'daisy.env' -->
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="ignoreUnresolvablePlaceholders" value="true"/>
  </bean>
  <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
      <property name="ignoreResourceNotFound" value="true"/>
      <property name="location" value="file:${daisy.env}"/>
  </bean>

  <broker xmlns="http://activemq.org/config/1.0" useJmx="true" brokerName="DaisyJMS" useShutdownHook="false">

    <!-- JMX config -->
    <managementContext>
      <managementContext createConnector="false"/>
    </managementContext>

    <memoryManager>
      <!--
         By setting the memory limit to 0, the memory management of ActiveMQ is disabled.
         This is not optimal, but is needed to work around what seems to be a bug in
         ActiveMQ: after causing a lot of messages (e.g. bulk update of documents),
         ActiveMQ hangs in its UsageManager.waitForSpace method, waiting forever
         for something that never happens. The same problem occurs when starting
         up the repository and there are still a lot of undelivered (persistent)
         messages to send out.
         This appears to be similar to what is reported here:
         http://issues.apache.org/activemq/browse/AMQ-1136

         [Note that this also requires the JVM memory to be set high enough,
          however for most normal usages the defaults should be OK]
      -->
      <usageManager id="memory-manager" limit="0 MB"/>
    </memoryManager>

    <plugins>
      <jaasAuthenticationPlugin configuration="daisyjms-domain" />
      
      <authorizationPlugin>
        <map>
          <authorizationMap>
            <authorizationEntries>
              <authorizationEntry queue=">" read="admins" write="admins" admin="admins" />
              <authorizationEntry queue="fullTextIndexerJobs" read="users" write="admins" admin="admins" />
              <authorizationEntry topic=">" read="admins" write="admins" admin="admins" />              
              <authorizationEntry topic="daisy" read="users" write="admins" admin="admins" />             
              <authorizationEntry topic="ActiveMQ.Advisory.>" read="guests,users" write="guests,users" admin="guests,users"/>
            </authorizationEntries>
          </authorizationMap>
        </map>
      </authorizationPlugin>
      
    </plugins>    
  
    <persistenceAdapter>      
      <!-- Disable database locks since this may cause the mysqldump of the backuptool to hang. Normally this will not 
           cause any problems unless Daisy would be configured with multiple brokers which is not the case -->
      <jdbcPersistenceAdapter dataSource="#dataSource" statements="#statements" useDatabaseLock="false"/>
      <!-- We don't enable the journal by default since as far as I understand, it is impossible to
           make a consistent/safe backup of both the journal and the database without shutting down
           ActiveMQ. Also, for Daisy's use the performance benefit brought by the journal is
           probably not so critical. -->
      <!-- journaledJDBC journalLogFiles="5" dataDirectory="activemq-data" dataSource="#dataSource" statements="#statements"/ -->
    </persistenceAdapter>
    
    
    <transportConnectors>
      <transportConnector uri="tcp://localhost:61616" />
      <transportConnector uri="vm://DaisyJMS" />
    </transportConnectors>
    
    
  </broker>

  <!-- ==================================================================== -->
  <!-- JDBC DataSource Configurations -->
  <!-- ==================================================================== -->
  
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">    
    <property name="url" value="jdbc:mysql://localhost/activemq?relaxAutoCommit=true&amp;useServerPrepStmts=false&amp;sessionVariables=storage_engine=InnoDB"/>
    <property name="username" value="activemq"/>
    <property name="password" value="activemq"/>
    <property name="defaultTransactionIsolation" value="2"/> <!-- 2 = TRANSACTION_READ_COMMITTED -->
  </bean>
  
  <bean id="statements" class="org.apache.activemq.store.jdbc.Statements">
    <property name="stringIdDataType" value="VARCHAR(110)"/>
    <property name="containerNameDataType" value="VARCHAR(110)"/>
    <property name="deleteOldMessagesStatement"  value="DELETE ACTIVEMQ_MSGS FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION&lt;&gt;0 AND EXPIRATION&lt;?) OR ID &lt;= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)"/>
  </bean>
  
</beans>
