<!--
  Copyright 2004 Outerthought bvba and Schaubroeck nv

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
  xmlns:d="http://outerx.org/daisy/1.0"
  xmlns:daisyutil="xalan://org.outerj.daisy.frontend.util.XslUtil">
  
  <xsl:import href="list_sorting.xsl"/>
  
  <xsl:param name="daisy-resources-uri"/>

  <xsl:template match="page">
    <page>
      <xsl:copy-of select="context"/>
      <pageTitle>Daisy: Namespace Administration</pageTitle>
      <content><xsl:call-template name="content"/></content>
    </page>
  </xsl:template>

  <xsl:template name="content">
    <h1>Namespace Administration</h1>
    <p>Each repository has a namespace, document IDs generated by that repository belong
      to that namespace. By choosing different namespaces for different repositories,
      documents can be exchanged between them without document ID clashes.</p>

    <p>Since it is not unlikely that two parties choose the same namespace name,
    Daisy also associates a fingerprint with each namespace, as an additional
    check that two namespaces are really the same.</p>

    <p>This screen shows, just for informational purposes, what namespaces
    this Daisy repository knows about. If a namespace is not in use
    anymore in the repository, it can be unregistered.</p>

    <p>The namespace of this repository is: <strong><xsl:value-of select="d:namespaces/@repositoryNamespace"/></strong></p>

    <xsl:apply-templates select="d:namespaces"/>
    <button onclick="createNew(); return false;">Create Namespace</button>
    <script type="text/javascript">
      function registerNamespace(name, fingerprint) {
        var confirmed = confirm("Are you sure you want to register namespace \"" + name + "\"?");
        
        if (confirmed) {
          var form = document.forms.actionForm;
          form.id.value = null;
          form.documentCount.value = null;
          form.name.value = name;
          form.fingerprint.value = fingerprint;
          form.action.value = "register";
          form.submit();
        }
      }
      function unregisterNamespace(id, name) {
        var confirmed = confirm("Are you sure you want to unregister namespace \"" + name + "\"?");
        
        if (confirmed) {
          var form = document.forms.actionForm;
          form.id.value = id;
          form.name.value = null;
          form.fingerprint.value = null;
          form.documentCount.value = null;
          form.action.value = "delete";
          form.submit();
        }
      }
      function manageNamespace(id, name, minDocCount) {
        var documentCount = Number(document.getElementById(id + "-documentCount").value);
        if (isNaN(documentCount) || documentCount &lt; minDocCount) { 
          alert("The document count for " + name + " should be a number greater or equals to " + minDocCount);
          return false;
        } 
        
        var confirmed = confirm("Are you sure you want the repository to manage the namespace with the name " + name + " with a starting document count of " + documentCount + "?");        
        
        if (confirmed) {
          var form = document.forms.actionForm;
          form.id.value = id;
          form.name.value = null;
          form.fingerprint.value = null;
          form.documentCount.value = documentCount;
          form.action.value = "manage";
          form.submit();
        }
      }
      function unmanageNamespace(id, name) {
        var documentCount = document.getElementById(id + "-documentCount");
        var confirmed = confirm("Are you sure you want the repository to stop managing the namespace with name " + name + "?");        
        
        if (confirmed) {
          var form = document.forms.actionForm;
          form.id.value = id;
          form.name.value = null;
          form.fingerprint.value = null;
          form.documentCount.value = null;
          form.action.value = "unmanage";
          form.submit();
        }
      }
      function createNew() {
        var namespacesTable = document.getElementById("namespaces");
        var tr = namespacesTable.insertRow(namespacesTable.rows.length);
        var nameTd = tr.insertCell(0);
        var regTd = tr.insertCell(1);
        var managedTd = tr.insertCell(2);
        var countTd = tr.insertCell(3);
        var actionTd = tr.insertCell(4);
        
        var dl = document.createElement("dl");
        var nameDt = document.createElement("dt");
        var nameDd = document.createElement("dd");
        var fpDt = document.createElement("dt");
        var fpDd = document.createElement("dd");
        
        nameTd.appendChild(dl);
        dl.appendChild(nameDt); dl.appendChild(nameDd); dl.appendChild(fpDt); dl.appendChild(fpDd);
        nameDt.appendChild(document.createTextNode("Name: ")); fpDt.appendChild(document.createTextNode("Fingerprint: "));
        
        var name = document.createElement("input");
        name.size = 15;
        name.name = "namespaceName";        
        var fingerprint = document.createElement("input");
        fingerprint.name = "fingerprint";
        fingerprint.size = 40;        
        nameDd.appendChild(name); fpDd.appendChild(fingerprint);
        
        regTd.appendChild(document.createTextNode("-"));
        var unmanagedImg = document.createElement("img");
        unmanagedImg.src = '<xsl:value-of select="$daisy-resources-uri"/>/skins/default/images/acl_deny.gif';
        unmanagedImg.alt = "unmanaged";
        managedTd.appendChild(unmanagedImg);
        
        countTd.appendChild(document.createTextNode("-"));
        
        var register = document.createElement("a");
        register.href = "javascript:void(0)";
        register.appendChild(document.createTextNode("register"));
        register.onclick = function(evt) {
          registerNamespace(name.value, fingerprint.value);
          return false;
        }
        var cancel = document.createElement("a");
        cancel.href = "javascript:void(0)";
        cancel.appendChild(document.createTextNode("cancel"));
        cancel.onclick = function (evt) {
          namespacesTable.deleteRow(tr.rowIndex);
          return false;
        };
        actionTd.appendChild(register); actionTd.appendChild(document.createElement("br")); actionTd.appendChild(cancel);
        
      }
    </script>
    <div style="display: none">
      <form name="actionForm" method="POST" action="namespace">
        <input type="hidden" name="action" value="delete" id="action"/>
        <input type="hidden" name="id"/>
        <input type="hidden" name="name"/>
        <input type="hidden" name="fingerprint"/>
        <input type="hidden" name="documentCount"/>
      </form>
    </div>
  </xsl:template>

  <xsl:template match="d:namespaces">
    <table class="default" id="namespaces">
      <tr>
        <th>Name
          <xsl:call-template name="sortIndication">
            <xsl:with-param name="name">name</xsl:with-param>
          </xsl:call-template>
          <br/>Fingerprint
        </th>
        <th>
          Internal<br/>registration ID
          <xsl:call-template name="sortIndication">
            <xsl:with-param name="name">id</xsl:with-param>
          </xsl:call-template>
        </th>
        <th>Managed</th>
        <th>Document Count</th>
        <th>Actions</th>
      </tr>
      <xsl:call-template name="insertSortedNamespaces"/>
    </table>
  </xsl:template>

  <xsl:template name="insertSortedNamespaces">
    <xsl:choose>
      <xsl:when test="$sortKey = 'id' and $sortOrder = 'asc'">
        <xsl:apply-templates select="d:namespace">
          <xsl:sort select="@id" order="ascending" data-type="number"/>
        </xsl:apply-templates>
      </xsl:when>
      <xsl:when test="$sortKey = 'id' and $sortOrder = 'desc'">
        <xsl:apply-templates select="d:namespace">
          <xsl:sort select="@id" order="descending" data-type="number"/>
        </xsl:apply-templates>
      </xsl:when>
      <xsl:when test="$sortKey = 'name' and $sortOrder = 'asc'">
        <xsl:apply-templates select="d:namespace">
          <xsl:sort select="@name" order="ascending"/>
        </xsl:apply-templates>
      </xsl:when>
      <xsl:when test="$sortKey = 'name' and $sortOrder = 'desc'">
        <xsl:apply-templates select="d:namespace">
          <xsl:sort select="@name" order="descending"/>
        </xsl:apply-templates>
      </xsl:when>
      <xsl:otherwise>
        <!-- catch case of invalid sortKey or sortOrder  -->
        <xsl:apply-templates select="d:namespace"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>

  <xsl:template match="d:namespace">
    <tr>
      <td>
        <strong><xsl:value-of select="@name"/></strong>
        <br/>
        <xsl:value-of select="@fingerprint"/>
      </td>
      <td><xsl:value-of select="@id"/></td>      
      <td>
        <xsl:choose>
          <xsl:when test="@isManaged = 'true'">
            <img src="{$daisy-resources-uri}/skins/default/images/acl_grant.gif" alt="managed"/>
          </xsl:when>
          <xsl:otherwise>
            <img src="{$daisy-resources-uri}/skins/default/images/acl_deny.gif" alt="unmanaged"/>
          </xsl:otherwise>
        </xsl:choose>
      </td>
      <td>
        <xsl:choose>
          <xsl:when test="@isManaged = 'true'">
            <xsl:value-of select="@documentCount"/>
          </xsl:when>
          <xsl:otherwise>
            <input value="{@documentCount}" name="{@id}-documentCount" id="{@id}-documentCount" size="4"/>
          </xsl:otherwise>
        </xsl:choose>                
      </td>
      <td>
        <a href="#" onClick="unregisterNamespace('{@id}', '{daisyutil:escape(@name)}'); return false;">unregister</a>
        <br/>
        <xsl:choose>
          <xsl:when test="@isManaged = 'true'">
            <a href="javascript:void(0)" onclick="unmanageNamespace('{@id}', '{daisyutil:escape(@name)}'); return false;">unmanage</a>
          </xsl:when>
          <xsl:otherwise>
            <a href="javascript:void(0)" onclick="manageNamespace('{@id}', '{daisyutil:escape(@name)}', {@documentCount}); return false;">manage</a>
          </xsl:otherwise>
        </xsl:choose>
        
      </td>
    </tr>
  </xsl:template>

</xsl:stylesheet>