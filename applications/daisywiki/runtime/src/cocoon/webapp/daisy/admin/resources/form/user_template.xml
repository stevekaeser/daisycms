<?xml version="1.0"?>
<!--
  Copyright 2004 Outerthought bvba and Schaubroeck nv

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<page xmlns:ft="http://apache.org/cocoon/forms/1.0#template"
      xmlns:fi="http://apache.org/cocoon/forms/1.0#instance"
      xmlns:jx="http://apache.org/cocoon/templates/jx/1.0"
      xmlns:i18n="http://apache.org/cocoon/i18n/2.1">

  <jx:import uri="resource://org/apache/cocoon/forms/generation/jx-macros.xml"/>

  <jx:set var="title">
      <jx:choose>
        <jx:when test="${user}">
          Edit User
        </jx:when>
        <jx:otherwise>
          Create A New User
        </jx:otherwise>
      </jx:choose>
  </jx:set>

  ${pageContext}

  <pageTitle>${title}</pageTitle>

  <content>
    <h1>${title}</h1>

    <ft:form-template name="user" id="userform" action="${submitPath}" method="POST" autocomplete="off">
      <fi:group>
        <fi:styling layout="columns"/>
        <fi:items>
          <ft:widget id="login"/>
          <ft:widget id="authenticationScheme">
          </ft:widget>
          <ft:widget id="thepassword">
            <fi:styling type="password"/>
          </ft:widget>
          <ft:widget id="firstName">
            <fi:styling size="50"/>
          </ft:widget>
          <ft:widget id="lastName">
            <fi:styling size="50"/>
          </ft:widget>
          <ft:widget id="email">
            <fi:styling size="50"/>
          </ft:widget>
          <ft:widget id="updateableByUser">
          </ft:widget>
          <ft:widget id="confirmed">
          </ft:widget>
          <ft:widget id="confirmKey">
            <fi:styling size="75"/>
          </ft:widget>
          <ft:widget id="defaultRole">
            <fi:styling onChange="defaultRoleChanged()"/>
          </ft:widget>
          <ft:widget id="roles">
            <fi:styling list-type="checkbox"/>
          </ft:widget>
        </fi:items>
      </fi:group>

      <input type="submit" value="Save"/>
      <input type="submit" value="Cancel" onclick="window.location='../../../user'; return false;"/>
    </ft:form-template>

    <jx:if test="${user != null and user.getId() != -1}">
      <hr/>
      <i>Last updated by ${pageContext.repository.userManager.getUserDisplayName(user.lastModifier)} on
      <jx:formatDate value="${user.lastModified}" dateStyle="short" timeStyle="medium" type="both" locale="${locale}"/>
      </i>
    </jx:if>

    <script>
      function defaultRoleChanged() {
        var form = document.forms.user;
        var defaultRoleId = form.defaultRole.value;

        // make the selected default role automatically selected in the checkbox-list of roles,
        // and make it disabled so it can't be unselected.
        var roles = form.roles;
        for (var i = 0; i &lt; roles.length; i++) {
          if (roles[i].value == defaultRoleId) {
            roles[i].checked = true;
            roles[i].disabled = true;
          } else if (roles[i].disabled) {
            roles[i].disabled = false;
          }
        }
      }

      var onSubmitHandler = new Object();
      onSubmitHandler.forms_onsubmit = function() {
        // make all roles-checkboxes enabled because otherwise their value doesn't get submitted
        var roles = document.forms.user.roles;
        for (var i = 0; i &lt; roles.length; i++) {
          roles[i].disabled = false;
        }
        return true;
      };
      cocoon.forms.addOnSubmitHandler(document.forms.user, onSubmitHandler);

      var onLoadHandler = new Object();
      onLoadHandler.forms_onload = function() {
        defaultRoleChanged();
        return true;
      }
      cocoon.forms.addOnLoadHandler(onLoadHandler);
    </script>
  </content>
</page>